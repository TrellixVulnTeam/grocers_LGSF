{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../employee.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nexport let MdfDemoComponent = /*#__PURE__*/(() => {\n  class MdfDemoComponent {\n    constructor(_builder, _service, _router) {\n      this._builder = _builder;\n      this._service = _service;\n      this._router = _router;\n      this.profile = this._builder.group({\n        firstname: ['', Validators.compose([Validators.required, Validators.minLength(3)])],\n        lastname: ['', Validators.compose([Validators.required, Validators.minLength(2)])]\n      });\n    }\n\n    handleSubmit() {\n      let firstname = this.profile.controls['firstname'].value; // if(this._service.fetchEmployee(firstname).subscribe(res=>{},err=>{}))\n\n      if (firstname == 'Alex') {\n        sessionStorage.setItem('user', firstname);\n\n        this._router.navigate(['Success', firstname]);\n      } else {\n        this._router.navigate(['mdf']);\n\n        this.profile.reset();\n      }\n    }\n\n  }\n\n  MdfDemoComponent.ɵfac = function MdfDemoComponent_Factory(t) {\n    return new (t || MdfDemoComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.EmployeeService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  MdfDemoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MdfDemoComponent,\n    selectors: [[\"app-mdf-demo\"]],\n    decls: 22,\n    vars: 7,\n    consts: [[1, \"row\"], [1, \"text-info\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"col-5\"], [\"type\", \"text\", \"formControlName\", \"firstname\", \"autocomplete\", \"off\", 1, \"form-control\"], [1, \"alert\", \"alert-danger\", 3, \"hidden\"], [\"type\", \"text\", \"formControlName\", \"lastname\", 1, \"form-control\"], [\"type\", \"submit\", \"value\", \"Submit\", 1, \"btn\", \"btn-outline-info\", 3, \"disabled\"], [1, \"text-danger\"]],\n    template: function MdfDemoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h4\", 1);\n        i0.ɵɵtext(2, \" MDF Form :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function MdfDemoComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.handleSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵtext(5, \" Firstname : \");\n        i0.ɵɵelement(6, \"input\", 4);\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵtext(8, \" Firstname is Mandatory\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 3);\n        i0.ɵɵtext(10, \" Lastname : \");\n        i0.ɵɵelement(11, \"input\", 6);\n        i0.ɵɵelementStart(12, \"div\", 5);\n        i0.ɵɵtext(13, \" Lastname is Mandatory\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 3);\n        i0.ɵɵelement(15, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 8);\n        i0.ɵɵtext(17, \" Forms : \");\n        i0.ɵɵelementStart(18, \"p\");\n        i0.ɵɵtext(19);\n        i0.ɵɵpipe(20, \"json\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"hr\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.profile);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"hidden\", ctx.profile.controls[\"firstname\"].valid || ctx.profile.controls[\"firstname\"].pristine);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"hidden\", ctx.profile.controls[\"lastname\"].valid || ctx.profile.controls[\"lastname\"].pristine);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.profile.invalid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(20, 5, ctx.profile.value));\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName],\n    pipes: [i4.JsonPipe],\n    styles: [\"\"]\n  });\n  return MdfDemoComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}